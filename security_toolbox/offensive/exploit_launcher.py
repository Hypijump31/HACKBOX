import subprocess
import os
import datetime

def run_exploit(command, timeout=60):
    """
    Lance un outil/exploit externe (Metasploit, nmap script, exploit.py, etc).
    Retourne la sortie et le code retour.
    """
    try:
        proc = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        out, err = proc.communicate(timeout=timeout)
        return {'stdout': out.decode(errors='ignore'), 'stderr': err.decode(errors='ignore'), 'returncode': proc.returncode}
    except Exception as e:
        return {'stdout': '', 'stderr': str(e), 'returncode': -1}

def export_exploit_result(result, export_base):
    """
    Exporte le résultat de l'exploit en TXT et Markdown.
    """
    # Organisation : exports/<date>/exploits/
    date_dir = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
    base_dir = os.path.join(os.getcwd(), "exports", date_dir, "exploits")
    os.makedirs(base_dir, exist_ok=True)
    export_base = os.path.join(base_dir, os.path.basename(export_base))
    with open(export_base + '.txt', 'w', encoding='utf-8') as f:
        f.write(result.get('stdout', ''))
        if result.get('stderr'):
            f.write('\n[STDERR]\n' + result['stderr'])
    with open(export_base + '.md', 'w', encoding='utf-8') as f:
        f.write(f"# Résultat Exploit\n\n")
        f.write(f"**Date** : {datetime.datetime.now().isoformat()}\n\n")
        f.write(f"**Code retour** : {result.get('returncode')}\n\n")
        f.write(f"## Sortie standard\n\n```")
        f.write(result.get('stdout', ''))
        f.write("\n```")
        if result.get('stderr'):
            f.write(f"\n\n## Erreurs\n\n```")
            f.write(result['stderr'])
            f.write("\n```")
